// Generated by CoffeeScript 1.8.0

/* (C) 2014 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2014 */

(function() {
  var NanikaPlugin;

  NanikaPlugin = this.NanikaPlugin;

  if (NanikaPlugin == null) {
    NanikaPlugin = {};
  }

  NanikaPlugin.choice_anchor = {
    initialize: function(nanika) {
      return nanika.on('materialized', function() {
        nanika.named.on('choiceselect', function(event) {
          if (/^On/.test(event.id)) {
            return nanika.request('any', {
              id: event.id,
              headers: event.args
            });
          } else if (/^script:/.test(event.id)) {
            return nanika.ssp.play(event.id.replace(/^script:/, ''));
          } else if (event.args.length) {
            return nanika.request('choiceselectex', {
              id: event.id,
              label: event.text,
              args: event.args
            });
          } else {
            return nanika.request('choiceselectex', {
              id: event.id,
              label: event.text
            }, function(response_args, response) {
              if ((response_args.value == null) || !response_args.value.length) {
                return nanika.request('choiceselect', {
                  id: event.id
                });
              }
            });
          }
        });
        return nanika.named.on('anchorselect', (function(_this) {
          return function(event) {
            if (/^On/.test(event.id)) {
              return nanika.request('any', {
                id: event.id,
                headers: event.args
              });
            } else if (event.args.length) {
              return nanika.request('anchorselectex', {
                id: event.id,
                label: event.text,
                args: event.args
              });
            } else {
              return nanika.request('anchorselectex', {
                id: event.id,
                label: event.text
              }, function(response_args, response) {
                if ((response_args.value == null) || !response_args.value.length) {
                  return nanika.request('anchorselect', {
                    id: event.id
                  });
                }
              });
            }
          };
        })(this));
      });
    }
  };

  this.NanikaPlugin = NanikaPlugin;

}).call(this);
