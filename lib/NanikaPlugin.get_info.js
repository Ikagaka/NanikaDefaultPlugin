// Generated by CoffeeScript 1.8.0

/* (C) 2014 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2014 */

(function() {
  var NanikaPlugin, string_header;

  NanikaPlugin = this.NanikaPlugin;

  if (NanikaPlugin == null) {
    NanikaPlugin = {};
  }

  string_header = function(version) {
    if (version === '3.0') {
      return 'Value';
    } else {
      return 'String';
    }
  };

  NanikaPlugin.get_info = {
    initialize: function(nanika) {
      nanika.on('version.set', function() {
        return nanika.request('username', null, function(args) {
          return nanika.resource.username = args.value;
        });
      });
      nanika.on('version.set', function() {
        return nanika.request('sakura.recommendsites', null, function(args, response) {
          return nanika.resource["sakura.recommendsites"] = response.headers.get_separated2(string_header(nanika.protocol_version));
        });
      });
      nanika.on('version.set', function() {
        return nanika.request('sakura.portalsites', null, function(args, response) {
          return nanika.resource["sakura.portalsites"] = response.headers.get_separated2(string_header(nanika.protocol_version));
        });
      });
      return nanika.on('version.set', function() {
        return nanika.request('kero.recommendsites', null, function(args, response) {
          return nanika.resource["kero.recommendsites"] = response.headers.get_separated2(string_header(nanika.protocol_version));
        });
      });
    }
  };

  this.NanikaPlugin = NanikaPlugin;

}).call(this);
