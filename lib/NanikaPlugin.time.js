// Generated by CoffeeScript 1.8.0

/* (C) 2014 Narazaka : Licensed under The MIT License - http://narazaka.net/license/MIT?2014 */

(function() {
  var NanikaPlugin;

  NanikaPlugin = this.NanikaPlugin;

  if (NanikaPlugin == null) {
    NanikaPlugin = {};
  }

  NanikaPlugin.time = {
    initialize: function(nanika) {
      var id_minutechange, id_secondchange, init_minutechange, init_secondchange;
      id_secondchange = null;
      init_secondchange = function() {
        if (id_secondchange != null) {
          return;
        }
        id_secondchange = setInterval((function(_this) {
          return function() {
            var uptime;
            uptime = 0;
            return nanika.request('secondchange', {
              os_uptime: Math.floor(uptime / 3600),
              mikire: false,
              overlapped: false,
              cantalk: true
            });
          };
        })(this), 1000);
        return nanika.on('halt', function() {
          return clearInterval(id_secondchange);
        });
      };
      nanika.on('response.firstboot', init_secondchange);
      nanika.on('response.boot', init_secondchange);
      nanika.on('response.changed', init_secondchange);
      nanika.on('response.called', init_secondchange);
      nanika.on('response.vanished', init_secondchange);
      id_minutechange = null;
      init_minutechange = function() {
        if (id_minutechange != null) {
          return;
        }
        if ((new Date).getSeconds() === 0) {
          nanika.off('response.secondchange', init_minutechange);
        } else {
          return;
        }
        id_minutechange = setInterval((function(_this) {
          return function() {
            var uptime;
            uptime = 0;
            return nanika.request('minutechange', {
              os_uptime: Math.floor(uptime / 3600),
              mikire: false,
              overlapped: false,
              cantalk: true
            });
          };
        })(this), 60000);
        return nanika.on('halt', function() {
          return clearInterval(id_minutechange);
        });
      };
      return nanika.on('request.secondchange', init_minutechange);
    }
  };

  this.NanikaPlugin = NanikaPlugin;

}).call(this);
